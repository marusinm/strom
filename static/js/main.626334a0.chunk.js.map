{"version":3,"sources":["assets/images/jasna_ndvi.png","assets/images/jasna_sat_2015.png","assets/images/jasna_sat_2019.png","assets/images/sumava_ndvi.png","assets/images/satelite_2018.png","assets/images/decin_sentinel1.png","assets/images/decin_sat.png","assets/images/filter_icon.png","assets/images/ice_cream.svg","assets/images/liptov_termo.png","assets/images/logo-z-transparent.png","map/Map.js","map/MapLowTatras.js","map/MapSumava.js","map/MapDecin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","lowTatrasCenter","termoPin","lowTatrasPin","sumavaPin1","sumavaPin2","sentinel1Pin","iconIceCream","L","Icon","iconUrl","require","iconRetinaUrl","iconAnchor","iconSize","React","Component","MapLowTatras","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","state","currentPos","e","console","log","latlng","lat","lng","react_default","a","createElement","es_Map","id","center","zoom","attributionControl","zoomControl","onClick","TileLayer","url","ScaleControl","position","Marker","Popup","LayersControl","BaseLayer","name","checked","ImageOverlay","jasnaSat2015","bounds","opacity","jasnaSat2019","Overlay","jasnaNdviDiff","MapSumava","_this2","axios","get","then","response","setState","kataster","data","catch","error","satellite2018","sumavaNdviDiff","GeoJSON","key","hash","Math","random","onEachFeature","MapDecin","decin_sentinel1","decin_sat","App","translate_en","translation","en","translate_cs","cz","className","type","class","intro","txt_intro1","txt_intro2","modules","to","smooth","duration","btn_use_cases","low_tatras","caption","description1","target","href","style","color","description2","map_MapLowTatras","src","filter_icon","legend1_line1","legend1_line2","legend2_line1","legend2_line2","btn_next","sumava","map_MapSumava","legend3_line1","legend3_line2","decin","map_MapDecin","footer","sources","maps_from","satellite_from","land_registry_from","cuzk","logo","alt","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.626334a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jasna_ndvi.c3bcd8e5.png\";","module.exports = __webpack_public_path__ + \"static/media/jasna_sat_2015.d20b71d3.png\";","module.exports = __webpack_public_path__ + \"static/media/jasna_sat_2019.55128dfd.png\";","module.exports = __webpack_public_path__ + \"static/media/sumava_ndvi.d402a437.png\";","module.exports = __webpack_public_path__ + \"static/media/satelite_2018.2aff946b.png\";","module.exports = __webpack_public_path__ + \"static/media/decin_sentinel1.892781d9.png\";","module.exports = __webpack_public_path__ + \"static/media/decin_sat.f62e89c0.png\";","module.exports = __webpack_public_path__ + \"static/media/filter_icon.c82b0d08.png\";","module.exports = __webpack_public_path__ + \"static/media/ice_cream.95dd12f9.svg\";","module.exports = __webpack_public_path__ + \"static/media/liptov_termo.ba823f7a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-z-transparent.e56d1080.png\";","import React from 'react';\nimport { Map as LeafletMap, TileLayer, ScaleControl, ImageOverlay, GeoJSON, LayersControl, Marker, Popup}  from 'react-leaflet';\nimport L from 'leaflet';\nimport './Map.css';\nimport liptovTermo from '../assets/images/liptov_termo.png';\nimport jasnaNdviDiff from '../assets/images/jasna_ndvi.png';\nimport jasnaSat2015 from '../assets/images/jasna_sat_2015.png';\nimport jasnaSat2019 from '../assets/images/jasna_sat_2019.png';\nimport sumavaNdviDiff from '../assets/images/sumava_ndvi.png';\nimport satellite2018 from '../assets/images/satelite_2018.png';\nimport decin_sentinel1 from '../assets/images/decin_sentinel1.png'\nimport decin_sat from '../assets/images/decin_sat.png'\nimport axios from 'axios';\nimport hash from 'object-hash';\n\n// Center of the map (Low Tatras)\nconst center = [49.009662, 19.578817]\nconst lowTatrasCenter = [48.997810425417505, 19.5234493073076]\nconst termoPin = [49.06852761680775, 19.653044342994693]\nconst lowTatrasPin = [48.997810425417505, 19.5234493073076]\nconst sumavaPin1 = [49.13588158999327, 13.462639376521112]\nconst sumavaPin2 = [49.10290544858402, 13.483424400910737]\nconst sentinel1Pin = [50.812323241745226, 14.20409129932523]\n\n\nconst MyMarker = props => {\n  const initMarker = ref => {\n    if (ref) {\n      ref.leafletElement.openPopup()\n    }\n  }\n  return <Marker ref={initMarker} {...props}/>\n}\n\nconst iconIceCream = new L.Icon({\n    iconUrl: require('../assets/images/ice_cream.svg'),\n    iconRetinaUrl: require('../assets/images/ice_cream.svg'),\n    // iconAnchor: null,\n    // popupAnchor: null,\n    // shadowUrl: null,\n    // shadowSize: null,\n    // shadowAnchor: null,\n    iconAnchor: [5, 55],\n    iconSize: [25, 55],\n});\n\nclass Map extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleClick = this.handleClick.bind(this);\n      this.state = {\n        currentPos: null\n      };\n    }\n\n    handleClick(e){\n      console.log(\"Click lat: \" + e.latlng.lat + \" long: \" + e.latlng.lng);\n      // this.setState({ currentPos: e.latlng });\n    }\n\n    componentDidMount() {\n        axios.get('geojson/KU_Sumava_WGS.geojson')\n            .then(response => {\n                this.setState({\n                    kataster: response.data\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            <LeafletMap\n                id='Map'\n                center={lowTatrasCenter}\n                zoom={15.5}\n                attributionControl={true}\n                zoomControl={true}\n                onClick={this.handleClick}\n              >\n\n                <TileLayer url='http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png'></TileLayer>\n\n                <ScaleControl position='bottomleft' />\n\n                <Marker position={lowTatrasPin}>\n                  <Popup position={lowTatrasPin}>\n                    Coordinates: <pre>{lowTatrasPin[0]}, {lowTatrasPin[1]}</pre>\n                  </Popup>\n                </Marker>\n                <Marker position={sumavaPin1}></Marker>\n                <Marker position={sumavaPin2}></Marker>\n                <Marker position={sentinel1Pin}></Marker>\n                <Marker position={termoPin} icon={iconIceCream}></Marker>\n\n                <LayersControl position=\"topright\">\n\n                  <LayersControl.Overlay name=\"Low Tatras Sat 2019\">\n                        <ImageOverlay\n                        url={jasnaSat2019}\n                        bounds={[\n                          [48.96805013122616, 19.46547813713551],\n                          [49.00685748937818, 19.57534141838551]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                  <LayersControl.Overlay name=\"Low Tatras Sat 2015\" checked>\n                        <ImageOverlay\n                        url={jasnaSat2015}\n                        bounds={[\n                          [48.96805013122616, 19.46547813713551],\n                          [49.00685748937818, 19.57534141838551]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                  <LayersControl.Overlay name=\"Low Tatras vegetation index NDVI\" checked>\n                        <ImageOverlay\n                        url={jasnaNdviDiff}\n                        bounds={[\n                          [48.96805013122616, 19.46547813713551],\n                          [49.00685748937818, 19.57534141838551]\n                        ]}\n                        opacity=\"0.3\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                  <LayersControl.Overlay name=\"Sumava sat 2018\" checked>\n                        <ImageOverlay\n                        url={satellite2018}\n                        bounds={[\n                          [48.79827046389008, 13.138275146484377],\n                          [49.14578361775004, 14.127044677734377]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                  <LayersControl.Overlay name=\"Sumava vegetation index NDVI\" checked>\n                        <ImageOverlay\n                        url={sumavaNdviDiff}\n                        bounds={[\n                          [48.79827046389008, 13.138275146484377],\n                          [49.14578361775004, 14.127044677734377]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n\n                  <LayersControl.Overlay name=\"Sumava land registry\">\n                    { this.state && this.state.kataster &&\n                      <GeoJSON key={hash({a: Math.random() * 10})} data={this.state ? this.state.kataster : null}\n                      onEachFeature={this.onEachFeature}/>\n                    }\n                  </LayersControl.Overlay>\n\n                  <LayersControl.Overlay name=\"Liptov termo\">\n                        <ImageOverlay\n                        url={liptovTermo}\n                        bounds={[\n                          [49.00587592924053, 19.352406263351444],\n                          [49.14980396275474, 19.791859388351444]\n                        ]}\n                        opacity=\"0.8\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n\n                  <LayersControl.Overlay name=\"Decin Sentinel 1\" checked>\n                        <ImageOverlay\n                        url={decin_sentinel1}\n                        bounds={[\n                          [50.80016643162019, 14.109926819801332],\n                          [50.84462806151737, 14.233523011207582]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n\n                  <LayersControl.Overlay name=\"Decin Sat\" checked>\n                        <ImageOverlay\n                        url={decin_sat}\n                        bounds={[\n                          [50.80016643162019, 14.109926819801332],\n                          [50.84462806151737, 14.233523011207582]\n                        ]}\n                        opacity=\"0.8\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                </LayersControl>\n            </LeafletMap>\n            </div>\n        )\n    }\n}\n\nexport default Map;\n","\nimport React from 'react';\nimport { Map as LeafletMap, TileLayer, ScaleControl, ImageOverlay, GeoJSON, LayersControl, Marker, Popup}  from 'react-leaflet';\nimport L from 'leaflet';\nimport './Map.css';\nimport jasnaNdviDiff from '../assets/images/jasna_ndvi.png';\nimport jasnaSat2015 from '../assets/images/jasna_sat_2015.png';\nimport jasnaSat2019 from '../assets/images/jasna_sat_2019.png';\nimport axios from 'axios';\nimport hash from 'object-hash';\n\n// Center of the map\nconst lowTatrasCenter = [48.99031771831017, 19.523394741117954]\nconst lowTatrasPin = [48.997810425417505, 19.5234493073076]\n\nconst MyMarker = props => {\n  const initMarker = ref => {\n    if (ref) {\n      ref.leafletElement.openPopup()\n    }\n  }\n  return <Marker ref={initMarker} {...props}/>\n}\n\nclass MapLowTatras extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleClick = this.handleClick.bind(this);\n      this.state = {\n        currentPos: null\n      };\n    }\n\n    handleClick(e){\n      console.log(\"Click lat: \" + e.latlng.lat + \" long: \" + e.latlng.lng);\n      // this.setState({ currentPos: e.latlng });\n    }\n\n    // componentWillReceiveProps(nextProps) { \n    //   console.log(\"recived props\");\n    //   this.forceUpdate();\n    // }\n\n    render() {\n        return (\n            <div>\n            <LeafletMap\n                id='Map'\n                center={lowTatrasCenter}\n                zoom={13.5}\n                attributionControl={true}\n                zoomControl={true}\n                onClick={this.handleClick}\n              >\n\n                <TileLayer url='http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png'></TileLayer>\n\n                <ScaleControl position='bottomleft' />\n\n                <Marker position={lowTatrasPin}>\n                  <Popup position={lowTatrasPin}>\n                    Coordinates: <pre>{lowTatrasPin[0]}, {lowTatrasPin[1]}</pre>\n                  </Popup>\n                </Marker>\n\n                <LayersControl position=\"topright\">\n                  {/*<LayersControl.BaseLayer name=\"Nízké Tatry - RGB-Satelit 2015\" checked>*/}\n                  <LayersControl.BaseLayer name=\"Low Tatras Mountains - RGB-Satellite 2015\" checked>\n                        <ImageOverlay\n                        url={jasnaSat2015}\n                        bounds={[\n                          [48.96805013122616, 19.46547813713551],\n                          [49.00685748937818, 19.57534141838551]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.BaseLayer>\n                  {/*<LayersControl.BaseLayer name=\"Nízké Tatry - RGB-Satelit 2019\">*/}\n                  <LayersControl.BaseLayer name=\"Low Tatras Mountains - RGB-Satellite 2019\">\n                        <ImageOverlay\n                        url={jasnaSat2019}\n                        bounds={[\n                          [48.96805013122616, 19.46547813713551],\n                          [49.00685748937818, 19.57534141838551]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.BaseLayer>\n                  {/*<LayersControl.Overlay name=\"Nízké Tatry - Úbytek lesa - rozdíl vegetačních indexů (NDVI)\" checked>*/}\n                  <LayersControl.Overlay name=\"Low Tatras Mountains - Forest degradation detected using vegetation indices (NDVI)\" checked>\n                        <ImageOverlay\n                        url={jasnaNdviDiff}\n                        bounds={[\n                          [48.96805013122616, 19.46547813713551],\n                          [49.00685748937818, 19.57534141838551]\n                        ]}\n                        opacity=\"0.3\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                </LayersControl>\n            </LeafletMap>\n            </div>\n        )\n    }\n}\n\nexport default MapLowTatras;\n","\nimport React from 'react';\nimport { Map as LeafletMap, TileLayer, ScaleControl, ImageOverlay, GeoJSON, LayersControl, Marker, Popup}  from 'react-leaflet';\nimport L from 'leaflet';\nimport './Map.css';\nimport sumavaNdviDiff from '../assets/images/sumava_ndvi.png';\nimport satellite2018 from '../assets/images/satelite_2018.png';\nimport axios from 'axios';\nimport hash from 'object-hash';\n\n// Center of the map \nconst sumavaPin1 = [49.13588158999327, 13.462639376521112]\nconst sumavaPin2 = [49.10290544858402, 13.483424400910737]\n\n\nconst MyMarker = props => {\n  const initMarker = ref => {\n    if (ref) {\n      ref.leafletElement.openPopup()\n    }\n  }\n  return <Marker ref={initMarker} {...props}/>\n}\n\nclass MapSumava extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleClick = this.handleClick.bind(this);\n      this.state = {\n        currentPos: null\n      };\n    }\n\n    handleClick(e){\n      console.log(\"Click lat: \" + e.latlng.lat + \" long: \" + e.latlng.lng);\n      // this.setState({ currentPos: e.latlng });\n    }\n\n    componentDidMount() {\n        axios.get('geojson/KU_Sumava_WGS.geojson')\n            .then(response => {\n                this.setState({\n                    kataster: response.data\n                });\n            })\n            .catch(function (error) {\n                console.log(error);\n        });\n    }\n\n    render() {\n        return (\n            <div>\n            <LeafletMap\n                id='Map'\n                center={sumavaPin2}\n                zoom={13}\n                attributionControl={true}\n                zoomControl={true}\n                onClick={this.handleClick}\n              >\n\n                <TileLayer url='http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png'></TileLayer>\n\n                <ScaleControl position='bottomleft' />\n\n                {/*<Marker position={sumavaPin1}></Marker>*/}\n                <Marker position={sumavaPin2}></Marker>\n\n                <LayersControl position=\"topright\">\n                  <LayersControl.Overlay name=\"Šumava - RGB-Satellite 2015\" >\n                        <ImageOverlay\n                        url={satellite2018}\n                        bounds={[\n                          [48.79827046389008, 13.138275146484377],\n                          [49.14578361775004, 14.127044677734377]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                  <LayersControl.Overlay name=\"Šumava - Forest degradation detected using vegetation indices (NDVI)\" checked>\n                        <ImageOverlay\n                        url={sumavaNdviDiff}\n                        bounds={[\n                          [48.79827046389008, 13.138275146484377],\n                          [49.14578361775004, 14.127044677734377]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                  <LayersControl.Overlay name=\"Šumava - Land registry\" checked>\n                    { this.state && this.state.kataster &&\n                      <GeoJSON key={hash({a: Math.random() * 10})} data={this.state ? this.state.kataster : null}\n                      onEachFeature={this.onEachFeature}/>\n                    }\n                  </LayersControl.Overlay>\n                </LayersControl>\n            </LeafletMap>\n            </div>\n        )\n    }\n}\n\nexport default MapSumava;\n","\nimport React from 'react';\nimport { Map as LeafletMap, TileLayer, ScaleControl, ImageOverlay, GeoJSON, LayersControl, Marker, Popup}  from 'react-leaflet';\nimport L from 'leaflet';\nimport './Map.css';\nimport decin_sentinel1 from '../assets/images/decin_sentinel1.png'\nimport decin_sat from '../assets/images/decin_sat.png'\nimport axios from 'axios';\nimport hash from 'object-hash';\n\n// Center of the map (Low Tatras)\nconst sentinel1Pin = [50.812323241745226, 14.20409129932523]\n\n\nconst MyMarker = props => {\n  const initMarker = ref => {\n    if (ref) {\n      ref.leafletElement.openPopup()\n    }\n  }\n  return <Marker ref={initMarker} {...props}/>\n}\n\nclass MapDecin extends React.Component {\n    constructor(props) {\n      super(props);\n      this.handleClick = this.handleClick.bind(this);\n      this.state = {\n        currentPos: null\n      };\n    }\n\n    handleClick(e){\n      console.log(\"Click lat: \" + e.latlng.lat + \" long: \" + e.latlng.lng);\n      // this.setState({ currentPos: e.latlng });\n    }\n\n    render() {\n        return (\n            <div>\n            <LeafletMap\n                id='Map'\n                center={sentinel1Pin}\n                zoom={14.5}\n                attributionControl={true}\n                zoomControl={true}\n                onClick={this.handleClick}\n              >\n\n                <TileLayer url='http://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png'></TileLayer>\n\n                <ScaleControl position='bottomleft' />\n\n                <Marker position={sentinel1Pin}></Marker>\n\n                <LayersControl position=\"topright\">\n                  <LayersControl.Overlay name=\"Dečín - Forest degradation detected using radar shadows\" checked>\n                        <ImageOverlay\n                        url={decin_sentinel1}\n                        bounds={[\n                          [50.80016643162019, 14.109926819801332],\n                          [50.84462806151737, 14.233523011207582]\n                        ]}\n                        opacity=\"1\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n\n                  <LayersControl.Overlay name=\"Dečín - RGB-Satellite\" checked>\n                        <ImageOverlay\n                        url={decin_sat}\n                        bounds={[\n                          [50.80016643162019, 14.109926819801332],\n                          [50.84462806151737, 14.233523011207582]\n                        ]}\n                        opacity=\"0.8\"\n                        >\n                        </ImageOverlay>\n                  </LayersControl.Overlay>\n                </LayersControl>\n            </LeafletMap>\n            </div>\n        )\n    }\n}\n\nexport default MapDecin;\n","import React, { Component } from 'react';\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport Map from './map/Map';\nimport MapLowTatras from './map/MapLowTatras';\nimport MapSumava from './map/MapSumava';\nimport MapDecin from './map/MapDecin';\nimport './App.css';\nimport './map/Map.css';\nimport logo from './assets/images/logo-z-transparent.png';\nimport filter_icon from './assets/images/filter_icon.png';\nimport en from './translation/en';\nimport cz from './translation/cz.json';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            translation: cz\n        };\n    }\n\n    translate_en = () => {\n        this.setState({translation: en});\n    }\n\n    translate_cs = () => {\n        this.setState({translation: cz});   \n    }\n\n    render() {\n        return (\n          <div className=\"App\">\n            <header className=\"App-header\"> \n                <div className=\"App-translate\">\n                <button className=\"btn btn-translate\" type=\"button\" onClick={this.translate_en}>EN</button>\n                <button className=\"btn btn-translate\" type=\"button\" onClick={this.translate_cs}>CS</button>\n                </div>\n                <h1>Ström</h1>\n                <div class=\"description\">\n                    {this.state.translation.intro.txt_intro1}\n                    <br/><br/>\n                    {this.state.translation.intro.txt_intro2}\n                </div>\n                <Link\n                    class=\"btn btn-dark btn-lg\"\n                    to=\"low-tatras\"\n                    smooth={true}\n                    duration= {500}\n                >\n                {this.state.translation.intro.btn_use_cases}\n                </Link>\n            </header>\n            <div>\n            <section id=\"low-tatras\" class=\"sec low-tatras\">\n                <h2 class=\"map-header\"> {this.state.translation.low_tatras.caption} </h2>\n                    <div class=\"map-desc\">\n                         {this.state.translation.low_tatras.description1} <a target=\"_blank\" href=\"https://www.sentinel-hub.com/\" style={{ color: 'Orange' }}>SentinelHub</a> {this.state.translation.low_tatras.description2} <a target=\"_blank\" href=\"https://www.researchgate.net/publication/326729428_Tropical_deforestation_monitoring_using_NDVI_from_MODIS_satellite_a_case_study_in_Pahang_Malaysia\" style={{ color: 'Orange' }}>\"Tropical deforestation monitoring using NDVI from MODIS satellite: a case study in Pahang, Malaysia\"</a>.\n                    </div>\n                <div class=\"map-wrapper\">\n                    <MapLowTatras id=\"Map\"/>\n                    <div class=\"legend\">\n                        <img src={filter_icon} class=\"legend_image\" />\n                        <p class=\"legend_text\">{this.state.translation.low_tatras.legend1_line1}<br/>{this.state.translation.low_tatras.legend1_line2}</p>\n                        <div class=\"legend_square1\"> </div>\n                        <p class=\"legend_text\">{this.state.translation.low_tatras.legend2_line1}<br/>{this.state.translation.low_tatras.legend2_line2}</p>\n                    </div>\n                </div>\n                <Link\n                    class=\"btn btn-dark btn-lg\"\n                    to=\"sumava\"\n                    smooth={true}\n                    duration= {500}\n                >\n                {this.state.translation.low_tatras.btn_next}\n                </Link>\n            </section>\n            </div>\n\n            <section id=\"sumava\" class=\"sec sumava\">\n                <h2 class=\"map-header\"> {this.state.translation.sumava.caption} </h2>\n                <div class=\"map-desc\">\n                    {this.state.translation.sumava.description1}\n                </div>\n                <div class=\"map-wrapper\">\n                    <MapSumava id=\"Map\"/>\n                    <div class=\"legend\">\n                        <img src={filter_icon} class=\"legend_image\" />\n                        <p class=\"legend_text\">{this.state.translation.sumava.legend1_line1}<br/>{this.state.translation.sumava.legend1_line2}</p>\n                        <div class=\"legend_square1\"> </div>\n                        <p class=\"legend_text\">{this.state.translation.sumava.legend2_line1}<br/>{this.state.translation.sumava.legend2_line2}</p>\n                        <div class=\"legend_square2\"> </div>\n                        <p class=\"legend_text\">{this.state.translation.sumava.legend3_line1}<br/>{this.state.translation.sumava.legend3_line2}</p>\n                    </div>\n                </div>\n                <Link\n                    class=\"btn btn-dark btn-lg\"\n                    to=\"decin\"\n                    smooth={true}\n                    duration= {500}\n                >\n                {this.state.translation.sumava.btn_next}\n                </Link>\n            </section>\n\n            <section id=\"decin\" class=\"sec decin\">\n                <h2 class=\"map-header\"> {this.state.translation.decin.caption} </h2>\n                <div class=\"map-desc\">\n                    {this.state.translation.decin.description1} <a target=\"_blank\" href=\"https://www.researchgate.net/publication/326916715_Use_of_the_SAR_Shadowing_Effect_for_Deforestation_Detection_with_Sentinel-1_Time_Series\">\"Use of the SAR Shadowing Effect for Deforestation Detection with Sentinel-1 Time Series\"</a>.\n                </div>\n                <div class=\"map-wrapper\">\n                    <MapDecin id=\"Map\"/>\n                    <div class=\"legend\">\n                        <img src={filter_icon} class=\"legend_image\" />\n                        <p class=\"legend_text\">{this.state.translation.decin.legend1_line1}<br/>{this.state.translation.decin.legend1_line2}</p>\n                        <div class=\"legend_square3\"> </div>\n                        <p class=\"legend_text\">{this.state.translation.decin.legend2_line1}<br/>{this.state.translation.decin.legend2_line2}</p>\n                    </div>\n                </div>\n                <Link\n                    class=\"btn btn-dark btn-lg\"\n                    to=\"footer\"\n                    smooth={true}\n                    duration= {500}\n                >\n                {this.state.translation.decin.btn_next}\n                </Link>\n            </section>\n\n            <footer id=\"footer\" className=\"App-footer\"> \n                <div class=\"Footer-div\">\n                    <h4>{this.state.translation.footer.sources}</h4>\n                    \n                    {this.state.translation.footer.maps_from} <a target=\"_blank\" href=\"https://www.openstreetmap.org/#map=8/48.674/19.709\">OpenStreetMap</a>\n                    <br />\n                    {this.state.translation.footer.satellite_from} <a target=\"_blank\" href=\"https://scihub.copernicus.eu\">Copernicus Open Access Hub</a> \n                    <br />\n                    {this.state.translation.footer.land_registry_from} <a target=\"_blank\" href=\"https://geoportal.cuzk.cz/(S(kbu2aqdwswrucnikn5v1hm4m))/Default.aspx?mode=TextMeta&text=mapa.katastralni_uvod&side=mapy_KM\">{this.state.translation.footer.cuzk}</a>\n                </div>\n\n                <div class=\"Footer-div\">\n                    Created by <a target=\"_blank\" href=\"https://zaitra.io/\">zaitra.io</a>\n                    <br/>\n                    <img src={logo} alt=\"Logo\" class=\"Footer-logo\" />\n                </div>\n            </footer>\n          </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}